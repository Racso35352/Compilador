/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package compilador;
import java.util.regex.*;
import java.util.Scanner;
import java.io.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 *
 * @author Oscar
 */
public class Ventana extends javax.swing.JFrame {
    
    public static FileWriter fichero = null;
   public static PrintWriter pw = null;
   public static String ArOrig="";
   public static String ArNew="";
   public static String AnLex="";
   
   //Declaracion de las variables para imprimir la cadena de acuerdo al token
   public static String repite="Repite";
   public static String hacer="Hacer";
   public static String mientras="Mientras";
   public static String variable="Variable";
   public static String numero="Numero";
   public static String operador="Operador";
   public static String desicion="Desicion";
   public static String imprime="Imprime";
   public static String error="Error";
   public static String lee="Lee";
   public static String asignacion="Asignacion";
   public static String fina="Final";
   public static String parametro="Parametro";
   
   public static String Ant="";
   
   public static String agregacion="Agregacion";
   public static String cadena="Cadena";
   public static String caracter="Caracter";
   public static String tipo="Tipo";
   public static String pub="Public";
   public static String cla="Class";
   public static String lla1="{";
   public static String lla2="}";
   
   
   public static String ant="";
   
   public static String dec="DEC";
   public static int cnt=0;
   
   public static boolean errban=false;
   
   public static boolean ban1=false;
   public static boolean ban2=false;
   public static boolean ban3=false;
   
   
   public static boolean k1=false;
   public static boolean k2=false;
   public static boolean k3=false;
   public static boolean k4=false;
   public static boolean k5=false;
   public static boolean k6=true;
   
   
   public static int cont=0;
   
   
   public static List<List<String>> variables = new ArrayList<List<String>>();
   public static List<String> lin = new ArrayList<String>();
   public static List<String> newlin = new ArrayList<String>();

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lexico = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        sintac = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        Origen = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Destino = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(130, 193, 230));

        lexico.setEditable(false);
        lexico.setColumns(20);
        lexico.setRows(5);
        jScrollPane1.setViewportView(lexico);

        sintac.setEditable(false);
        sintac.setColumns(20);
        sintac.setRows(5);
        jScrollPane2.setViewportView(sintac);

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel1.setText("Registro de variables");

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel2.setText("Codigo fuente");

        jButton1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton1.setText("Aceptar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Abrir Archivo Generado");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Analizador Lexico");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Archivo Origen");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Archivo Destino");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(91, 91, 91))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(55, 55, 55)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Destino, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Origen, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Origen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(Destino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        k1=false;
        k2=false;
        k3=false;
        k4=false;
        k5=false;
        k6=true;
        
        
        lexico.setText("");
        sintac.setText("");
        variables.clear();
        ArNew="";
        ArOrig="";
        //lin.clear();
        cnt=0;
        cont=0;
        
        sintac.append("Lectura\tLexema\tTipo\tId\n");
      /*
      System.out.println("Ingrese el nombre del archivo destino con su extension");
      String destino=ent.next();
      */
      Pattern comentario = Pattern.compile("[ ]*");
      Matcher mat;//Declaración del matcher
      //Cleación del nuevo archivo
      String ori=Origen.getText();
      //String ori="";
      
      //String dest=Destino.getText();
      String dest="";
      
      try{
         //fichero = new FileWriter("C:\\Users\\Oscar\\Documents\\Compilador\\src\\compilador\\"+dest+".txt");
         //pw = new PrintWriter(fichero);
      
      
         File archivo = null;
         FileReader fr = null;
         BufferedReader br = null;
         
         archivo = new File ("C:\\Users\\Oscar\\Dropbox\\Compilador\\src\\compilador\\"+ori+".txt");
         fr = new FileReader (archivo);
         br = new BufferedReader(fr);
         int cant=0;
         int cont=0;
         String newlinea="";
         
         String linea;
         //System.out.println("Linea\t\tToken\t\t\t\tLexema");//Impresión de la tabla
         while((linea=br.readLine())!=null){
             
            cnt++;
            errban=true;
            ArOrig+=cnt+": " +linea+"\n";
            mat = comentario.matcher(linea);
            if (mat.matches()==false){
               for(int x=0;x<(linea.length()-1);x++){
                  if(linea.charAt(x)=='/'&&linea.charAt(x+1)=='/'){
                     for(int y=0;y<x;y++){
                        newlinea+=linea.charAt(y);//Creación de la nueva linea sin los comentarios
                     }
                     linea=newlinea;
                     newlinea="";  
                  }
               }
               newlinea="";
                        
               linea=revisarespacios(linea);
               //Eliminación de espacios
                                
               int f=linea.length();
               for(int x=0;x<(linea.length()-1);x++){
                  if(linea.charAt(x)==' '&&linea.charAt(x+1)==' '){      
                  }
                  else{
                     newlinea+=linea.charAt(x);
                     if(x==(f-2)){
                        if(linea.charAt(x+1)!=' ')
                           newlinea+=linea.charAt(x+1);
                     }
                  }                        
               }
               linea=newlinea;
               newlinea="";
                   
               cont++;
               ban1=false;
               ban2=false;
               ban3=false;
               int c1=0;
               int c2=0;
               String palabra="";
               
               
               for(int x=0;x<linea.length();x++){
                  
                  
                  if(linea.charAt(x)==' '){
                        
                     c2=x-1;
                     for(int y=c1;y<=c2;y++){
                        palabra+=linea.charAt(y);
                     }
                     c1=x+1;
                     revisar(cont,palabra);
                     
                     revClass(Ant,palabra);
                     Ant=palabra;
                     palabra="";        
                  }
                  if(x==linea.length()-1){
                        
                     for(int y=c1;y<linea.length();y++){
                        palabra+=linea.charAt(y);
                     }
                     c1=x+1;
                     
                     revisar(cont,palabra);
                     
                     revClass(Ant,palabra);
                     Ant=palabra;
                     palabra="";        
                  }
                  
               } 
               
  //AQUI MERO!!!!! 
  //pw.println("" + linea);//Guardar la linea en el nuevo archivo generado
                  ArNew=ArNew+linea+"\n";
                  
                  
            }  /*   
            if(k5==false){
                System.out.println("Error en linea "+cnt+": Codigo fuera de la clase");
            }
            else{ */   
            if(errban==true)System.out.println("Error en linea "+cnt+": Error de termino de linea, ausencia de ;");
            //}
            if(ban1==true&&ban2==true&&errban==false)System.out.println("Error en linea "+cnt+": Error de sintaxis ");
         }
         
       
      }
      catch(Exception e){
         e.printStackTrace();
      }finally{
         try{                    
            if (null != fichero)
               fichero.close();//Cerrar y finalizar el archivo.
         } catch (Exception e2) {
            e2.printStackTrace();
         }           
         
      }
      
      
      int cc=variables.size();
      int cc2=0;
      if (k5==true){
      for(int x=0;x<cc;x++){
         
         newlin=variables.get(x);
         sintac.append(newlin.get(0)+"\t"+newlin.get(1)+"\t"+newlin.get(2)+"\t"+newlin.get(3)+"\n");
         
      }
      }
      lexico.append(ArOrig);
      
      
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Vista in=new Vista();
        in.setVisible(true);
        in.cuadro.setText("");
        in.cuadro.append("Linea\tToken\tLexema\n");
        in.cuadro.append(AnLex);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Vista an=new Vista();
        an.setVisible(true);
        an.cuadro.setText("");
        an.cuadro.append(ArNew);
    }//GEN-LAST:event_jButton2ActionPerformed

    
    
     //Método para rliminar espacios
    
   public static void revClass(String ant,String palabra){
       if(palabra.equals("Public")) k1=true;
       if(ant.equals("Public")&&palabra.equals("Class")) k2=true;
       if(ant.equals("Class")&&palabra.equals("{")) k3=true;       
       if(ant.equals("End")&&palabra.equals("}")) k4=true;
       if(k1==true &&k2==true &&k3==true&&k4==true)k5=true;
       //if(k4==true&&k5==true)k6=false;
       //System.out.println(""+ant+" "+palabra+" "+k1+k2+k3+k4);
   }
    
    
   public static String revisarespacios(String linea){
      int x=0;
      int y=linea.length();
      int c=0;
      String newlinea="";
      for(x=0;x<y;x++){
         if(linea.charAt(x)==' '||linea.charAt(x)==(char)9)c++;
         else 
            break;
      }
      for(;c<y;c++){
         newlinea+=linea.charAt(c);
      }
      return newlinea;
   }
   
   //Metodo para ubicar los lexemas
   public static void revisar(int cont,String palabra){
      int c1=0;
      int c2=palabra.length()-1;
      int x=0;
      int y=palabra.length()-1;
      
      String cad="";
      String npal="";
      boolean tiene1=false;
      boolean tiene2=false;
      boolean k=true;
      
      //Comparacion de tokens de acuerdo al lexema leido
      if(palabra.charAt(c1)=='('){
         tiene1=true;
         cad="(";
         AnLex+=("\n"+cont+"\t"+parametro);
         AnLex+=("\t"+cad);
         if(palabra.charAt(c2)==')'){
            tiene2=true;
            cad=")";
         }
      
         if(tiene1==true)x=1;
         if(tiene2==true)y--;
      }
      
      else if(palabra.charAt(c1)=='"'){
         tiene1=true;
         cad="\"";
         AnLex+=("\n"+cont+"\t"+cadena);
         AnLex+=("\t"+palabra);
         k=false;
      }
      
      else if(palabra.charAt(c1)=='\''){
         tiene1=true;
         cad="'";
         AnLex+=("\n"+cont+"\t"+caracter);
         AnLex+=("\t"+palabra);
         k=false;
      }
      
      for(;x<=y;x++){
         npal+=palabra.charAt(x);
      }
      
      if(k){    
      if(npal.equals(repite)){
         AnLex+=("\n"+cont+"\t"+repite);
         AnLex+=("\t"+npal);
      }
      else if(npal.equals(hacer)){
         AnLex+=("\n"+cont+"\t"+hacer);
         AnLex+=("\t"+npal);
      }
      else if(npal.equals(mientras)){
         AnLex+=("\n"+cont+"\t"+mientras);
         AnLex+=("\t"+npal);
      }
      else if(npal.equals(dec)){
         AnLex+=("\n"+cont+"\t"+"Declaracion");
         AnLex+=("\t"+npal);
         ban1=true;
      }
      else if((npal.matches("^-?[0-9]+[.]?[0-9]+"))||(npal.matches("^-?[0-9]+"))){
         AnLex+=("\n"+cont+"\t"+numero);
         AnLex+=("\t"+npal);
      }
      
      else if(npal.matches("^[<>]=?$") || npal.matches("^[!=]=$")){
         AnLex+=("\n"+cont+"\t"+operador);
         AnLex+=("\t"+npal);
      }
      else if(npal.equals("Si") || npal.equals("Sino")){
         AnLex+=("\n"+cont+"\t"+desicion);
         AnLex+=("\t"+npal);
      }
      else if(npal.equals("num") || npal.equals("bool")|| npal.equals("cad")|| npal.equals("car")){
         AnLex+=("\n"+cont+"\t"+tipo);
         AnLex+=("\t"+npal);
         ban2=true;
         ant=npal;
      }
      else if(npal.equals("Imprime")){
         AnLex+=("\n"+cont+"\t"+imprime);
         AnLex+=("\t"+npal);
      }
      else if(npal.equals("&")){
         AnLex+=("\n"+cont+"\t"+agregacion);
         AnLex+=("\t"+npal);
         if(ban3==true){
             ban1=true;
             ban2=true;
             ban3=false;             
         }
      }
      else if(npal.equals("Lee")){
         AnLex+=("\n"+cont+"\t"+lee);
         AnLex+=("\t"+npal);
      }
      
      //Revision del lexeman con respecto a tokens
      else if(npal.equals("=")){
         AnLex+=("\n"+cont+"\t"+asignacion);
         AnLex+=("\t"+npal);
      }
      else if(npal.equals(";")){
         AnLex+=("\n"+cont+"\t"+fina);
         AnLex+=("\t"+npal);
         errban=false;
      }
      else if(npal.matches("^[a-zA-Z]\\w*$")){
         AnLex+=("\n"+cont+"\t"+variable);
         AnLex+=("\t"+npal);
         ban3=true;
         if(ban1==true&&ban2==true){
         RevVariable(npal);
         ban1=false;
         ban2=false;
         
         }
         
      }
      //Indicación de error por default al no coincidir con ningun token
      else{
         AnLex+=("\n"+cont+"\t"+error);
         AnLex+=("\t"+npal);
      }
      
      }
      
      if(tiene2==true && palabra.charAt(c2)==')'){
         AnLex+=("\n"+cont+"\t"+parametro);
         AnLex+=("\t"+cad);
      }      
   
   }

   
   
   public static void RevVariable(String cad){
              
       boolean ban=true;
        int cc=variables.size();
        if(cc==0)variables.add(Arrays.asList("1",cad,ant,"id"+cont));
        else{
            for(int i=0;i<cc;i++){
                lin=variables.get(i);
                if(cad.equals(lin.get(1))){
                    System.err.println("Error en linea "+cnt +": Variable ya declarada");
                    ban=false;
                }
            }
            if(ban==true)variables.add(Arrays.asList("1",cad,ant,"id"+cont));
        }
        
        cont++;
               
   }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Destino;
    private javax.swing.JTextField Origen;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTextArea lexico;
    public static javax.swing.JTextArea sintac;
    // End of variables declaration//GEN-END:variables
}
